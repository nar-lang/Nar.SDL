module Nar.SDL.MessageBox

type MessageBoxIcon
    = MessageBoxIconError
    | MessageBoxIconWarning
    | MessageBoxIconInformation

type MessageBoxButtonsLayout
    = MessageBoxButtonsLayoutLeftToRight
    | MessageBoxButtonsLayoutRightToLeft

type MessageBoxButtonFlag
    = MessageBoxButtonFlagNone
    | MessageBoxButtonFlagsReturnKeyDefault
    | MessageBoxButtonFlagsEscapeKeyDefault

alias MessageBoxButtonData =
    { flag: MessageBoxButtonFlag
    , buttonId: Int
    , text: String 
    }

alias MessageBoxColorScheme =
    { background : MessageBoxColor
    , text : MessageBoxColor
    , buttonBorder : MessageBoxColor
    , buttonBackground : MessageBoxColor
    , buttonSelected : MessageBoxColor
    }

alias MessageBoxColor = (Int, Int, Int)

alias MessageBoxData = 
    { icon: MessageBoxIcon
    , buttonsLayout: MessageBoxButtonsLayout
    , window: Maybe[Video.Window]
    , title: String
    , message: String
    , buttons: List[MessageBoxButtonData]
    , colorScheme: Maybe[MessageBoxColorScheme]
    }

def native showSimpleMessageBox(
    icon: MessageBoxIcon, title: String, message: String, window: Maybe[Video.Window]
): Task[String, ()]

def native showMessageBox(data: MessageBoxData): Task[String, Int]
